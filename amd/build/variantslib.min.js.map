{"version":3,"file":"variantslib.min.js","sources":["../src/variantslib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Variants helper for C4L plugin.\n *\n * @module      tiny_c4l/variantslib\n * @copyright   2023 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport {components as COMPONENTS} from './components';\nimport {variants as VARIANTS} from './variants';\n\nconst variantsPreferenceName = 'c4l_components_variants';\nlet variantPreferences = {};\n\n/**\n * Load user preferences.\n *\n * @returns {Promise}\n */\nexport const loadVariantPreferences = async() => {\n\n    const request = {\n        methodname: 'core_user_get_user_preferences',\n        args: {\n            name: variantsPreferenceName\n        }\n    };\n\n    return Ajax.call([request])[0]\n        .then(result => {\n            let comp = {};\n            let rawPreferences = {};\n            let variantObj = {};\n            try {\n                rawPreferences = JSON.parse(result.preferences[0].value);\n            } catch (e) {\n                Notification.exception(e);\n            }\n\n            if (rawPreferences !== null) {\n                Object.keys(rawPreferences).forEach(preference => {\n                    comp = COMPONENTS.find(component => component.id == preference);\n                    if (comp != undefined) {\n                        variantPreferences[comp.name] = [];\n                        rawPreferences[preference].forEach((variant) => {\n                            variantObj = VARIANTS.find(element => element.id == variant);\n                            if (variantObj != undefined) {\n                                variantPreferences[comp.name].push(variantObj.name);\n                            }\n                        });\n                    }\n                });\n            }\n    }).catch(Notification.exception);\n};\n\n/**\n * Save user preferences.\n *\n * @returns {Promise}\n */\nexport const saveVariantPreferences = () => {\n    let comp = {};\n    let rawPreferences = {};\n    let variantObj = {};\n    Object.keys(variantPreferences).forEach(preference => {\n        comp = COMPONENTS.find(component => component.name == preference);\n        if (comp != undefined) {\n            rawPreferences[comp.id] = [];\n            variantPreferences[preference].forEach((variant) => {\n                variantObj = VARIANTS.find(element => element.name == variant);\n                if (variantObj != undefined) {\n                    rawPreferences[comp.id].push(variantObj.id);\n                }\n            });\n        }\n    });\n\n    const request = {\n        methodname: 'core_user_update_user_preferences',\n        args: {\n            preferences: [\n                {\n                    type: variantsPreferenceName,\n                    value: JSON.stringify(rawPreferences)\n                }\n            ]\n        }\n    };\n\n    return Ajax.call([request])[0].catch(Notification.exception);\n};\n\n\n/**\n * Returns whether a variant exists for a component.\n *\n * @param  {string} component Component name\n * @param  {string} variant   Variant name\n * @returns {bool}\n */\nexport const variantExists = (component, variant) => {\n    return variantPreferences?.[component] && variantPreferences[component].indexOf(variant) !== -1;\n};\n\n/**\n * Returns each variant for a component as a CSS class.\n *\n * @param  {string} component Component name\n * @returns {Array}\n */\nexport const getVariantsClass = (component) => {\n    let variants = [];\n\n    if (variantPreferences?.[component]) {\n        variantPreferences[component].forEach(variant => {\n            variants.push('c4l-' + variant + '-variant');\n        });\n    }\n    return variants;\n};\n\n/**\n * Return all HTML variants for a component.\n *\n * @param  {string} component Component name\n * @returns {string}\n */\nexport const getVariantsHtml = (component) => {\n    let variantsHtml = '';\n    let variantObj = {};\n\n    if (variantPreferences?.[component]) {\n        variantPreferences[component].forEach(variant => {\n            variantObj = VARIANTS.find(element => element.name == variant);\n            if (variantObj != undefined) {\n                variantsHtml += variantObj.html;\n            }\n        });\n    }\n    return variantsHtml;\n};\n\n/**\n * Return the HTML variant.\n *\n * @param  {string} variant Variant name\n * @returns {string}\n */\nexport const getVariantHtml = (variant) => {\n    let variantHtml = [];\n    let variantObj = {};\n\n    variantObj = VARIANTS.find(element => element.name == variant);\n    if (variantObj != undefined) {\n        variantHtml = variantObj.html;\n    }\n    return variantHtml;\n};\n\n/**\n * Add a variant to variantPreferences\n *\n * @param  {string} component Component name\n * @param  {string} variant   Variant name\n */\nexport const addVariant = (component, variant) => {\n    if (!variantPreferences?.[component]) {\n        variantPreferences[component] = [];\n    }\n    if (!variantExists(component, variant)) {\n        variantPreferences[component].push(variant);\n    }\n};\n\n/**\n * Remove a variant from variantPreferences\n *\n * @param  {string} component Component name\n * @param  {string} variant   Variant name\n */\nexport const removeVariant = (component, variant) => {\n    const index = variantPreferences[component].indexOf(variant);\n    if (index !== -1) {\n        delete variantPreferences[component][index];\n    }\n};\n"],"names":["variantPreferences","async","request","methodname","args","name","Ajax","call","then","result","comp","rawPreferences","variantObj","JSON","parse","preferences","value","e","exception","Object","keys","forEach","preference","COMPONENTS","find","component","id","undefined","variant","VARIANTS","element","push","catch","Notification","type","stringify","variantExists","indexOf","variants","variantsHtml","html","variantHtml","index"],"mappings":";;;;;;;6WA6BIA,mBAAqB,mCAOaC,gBAE5BC,QAAU,CACZC,WAAY,iCACZC,KAAM,CACFC,KAbmB,mCAiBpBC,cAAKC,KAAK,CAACL,UAAU,GACvBM,MAAKC,aACEC,KAAO,GACPC,eAAiB,GACjBC,WAAa,OAEbD,eAAiBE,KAAKC,MAAML,OAAOM,YAAY,GAAGC,OACpD,MAAOC,yBACQC,UAAUD,GAGJ,OAAnBN,gBACAQ,OAAOC,KAAKT,gBAAgBU,SAAQC,aAChCZ,KAAOa,uBAAWC,MAAKC,WAAaA,UAAUC,IAAMJ,aACxCK,MAARjB,OACAV,mBAAmBU,KAAKL,MAAQ,GAChCM,eAAeW,YAAYD,SAASO,UAChChB,WAAaiB,mBAASL,MAAKM,SAAWA,QAAQJ,IAAME,UAClCD,MAAdf,YACAZ,mBAAmBU,KAAKL,MAAM0B,KAAKnB,WAAWP,gBAMvE2B,MAAMC,sBAAaf,4CAQY,SAC9BR,KAAO,GACPC,eAAiB,GACjBC,WAAa,GACjBO,OAAOC,KAAKpB,oBAAoBqB,SAAQC,aACpCZ,KAAOa,uBAAWC,MAAKC,WAAaA,UAAUpB,MAAQiB,aAC1CK,MAARjB,OACAC,eAAeD,KAAKgB,IAAM,GAC1B1B,mBAAmBsB,YAAYD,SAASO,UACpChB,WAAaiB,mBAASL,MAAKM,SAAWA,QAAQzB,MAAQuB,UACpCD,MAAdf,YACAD,eAAeD,KAAKgB,IAAIK,KAAKnB,WAAWc,iBAMlDxB,QAAU,CACZC,WAAY,oCACZC,KAAM,CACFW,YAAa,CACT,CACImB,KAxEW,0BAyEXlB,MAAOH,KAAKsB,UAAUxB,2BAM/BL,cAAKC,KAAK,CAACL,UAAU,GAAG8B,MAAMC,sBAAaf,kBAWzCkB,cAAgB,CAACX,UAAWG,WAC9B5B,MAAAA,0BAAAA,mBAAqByB,cAAkE,IAApDzB,mBAAmByB,WAAWY,QAAQT,wEASnDH,gBACzBa,SAAW,UAEXtC,MAAAA,oBAAAA,mBAAqByB,YACrBzB,mBAAmByB,WAAWJ,SAAQO,UAClCU,SAASP,KAAK,OAASH,QAAU,eAGlCU,mCASqBb,gBACxBc,aAAe,GACf3B,WAAa,UAEbZ,MAAAA,oBAAAA,mBAAqByB,YACrBzB,mBAAmByB,WAAWJ,SAAQO,UAClChB,WAAaiB,mBAASL,MAAKM,SAAWA,QAAQzB,MAAQuB,UACpCD,MAAdf,aACA2B,cAAgB3B,WAAW4B,SAIhCD,sCASoBX,cACvBa,YAAc,GACd7B,WAAa,UAEjBA,WAAaiB,mBAASL,MAAKM,SAAWA,QAAQzB,MAAQuB,UACpCD,MAAdf,aACA6B,YAAc7B,WAAW4B,MAEtBC,iCASe,CAAChB,UAAWG,WAC7B5B,MAAAA,oBAAAA,mBAAqByB,aACtBzB,mBAAmByB,WAAa,IAE/BW,cAAcX,UAAWG,UAC1B5B,mBAAmByB,WAAWM,KAAKH,iCAUd,CAACH,UAAWG,iBAC/Bc,MAAQ1C,mBAAmByB,WAAWY,QAAQT,UACrC,IAAXc,cACO1C,mBAAmByB,WAAWiB"}