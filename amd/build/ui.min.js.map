{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview\n} from './options';\nimport ModalEvents from 'core/modal_events';\nimport {\n    addVariant,\n    getVariantsClass,\n    getVariantHtml,\n    getVariantsHtml,\n    loadVariantPreferences,\n    removeVariant,\n    saveVariantPreferences,\n    setVariants,\n    variantExists,\n    setComponents\n} from './variantslib';\nimport {call as fetchMany} from 'core/ajax';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet components = null;\nlet categories = null;\nlet flavors = null;\nlet variants = null;\nlet langStrings = {};\n\nlet currentFlavor = '';\nlet currentCategoryId = 1;\nlet lastFlavor = [];\n\n/**\n * Handle action\n *\n * @param {TinyMCE} editor\n */\nexport const handleAction = async(editor) => {\n    let data = await getC4LData();\n    components = data.components;\n    categories = data.categories;\n    flavors = data.flavors;\n    variants = data.variants;\n\n    setComponents(components);\n    setVariants(variants);\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    langStrings = await getAllStrings();\n    allowedComponents = getallowedComponents(editor);\n    loadVariantPreferences().then(() => displayDialogue(editor));\n};\n\n/**\n * Display modal\n *\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n    const templateContext = await getTemplateContext(editor, data);\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: templateContext,\n        large: true,\n    });\n\n    // Set modal size when no preview.\n    if (!previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-no-preview');\n    }\n    modal.show();\n\n    // Event modal listener.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n\n    // Event filters listener.\n    const filters = modal.getRoot()[0].querySelectorAll('.c4l-button-filter');\n    filters.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFilterClick(event, modal);\n        });\n    });\n\n    // Event flavor selector listener.\n    const flavorbuttons = modal.getRoot()[0].querySelectorAll('.c4l-button-flavor');\n    flavorbuttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFlavorClick(event, modal);\n        });\n    });\n\n    // Event buttons listeners.\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4lt-dialog-button');\n    buttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonClick(event, editor, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleButtonMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleButtonMouseEvent(event, modal, false);\n            });\n        }\n    });\n\n    // Event variants listeners.\n    const variants = modal.getRoot()[0].querySelectorAll('.c4l-button-variant');\n    variants.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleVariantClick(event, modal);\n        });\n        // if (previewC4L) {\n        //     node.addEventListener('mouseenter', (event) => {\n        //         handleVariantMouseEvent(event, modal, true);\n        //     });\n        //     node.addEventListener('mouseleave', (event) => {\n        //         handleVariantMouseEvent(event, modal, false);\n        //     });\n        // }\n    });\n\n    if (filters.length > 0) {\n        filters[0].click();\n    }\n\n    clickFlavor(modal, lastFlavor[currentCategoryId] ? lastFlavor[currentCategoryId] : '');\n};\n\n/**\n * Handle a click within filter button.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleButtonFilterClick = (event, modal) => {\n    const button = event.target.closest('button');\n    currentCategoryId = button.dataset.filter;\n\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n    buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n    button.classList.add('c4l-button-filter-enabled');\n\n    showFlavors(modal, currentCategoryId);\n\n    // Show/hide component buttons.\n    showCategoryButtons(modal, currentCategoryId);\n\n    clickFlavor(modal, lastFlavor[currentCategoryId] ? lastFlavor[currentCategoryId] : '');\n};\n\nconst clickFlavor = (modal, flavor = '') => {\n    if (flavor == '') {\n        let availableFlavors = modal.getRoot()[0].querySelectorAll('.c4l-button-flavor:not(.c4l-hidden)');\n        if (availableFlavors.length > 0) {\n            availableFlavors[0].click();\n        }\n        return;\n    }\n\n    let flavorButtons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-flavors button');\n    flavorButtons.forEach(node => {\n        if (node.dataset.flavor == flavor) {\n            node.click();\n        }\n    });\n};\n\nconst showFlavors = (modal, categoryId) => {\n    const flavorButtons = modal.getRoot()[0].querySelectorAll('.c4l-button-flavor');\n    flavorButtons.forEach(node => {\n        node.classList.remove('c4l-button-flavor-enabled');\n        let categories = node.dataset.categories.split(',');\n        if (categories.length == 0 || categories.includes(categoryId)) {\n            node.classList.remove('c4l-hidden');\n        } else {\n            node.classList.add('c4l-hidden');\n        }\n    });\n};\n\nconst handleButtonFlavorClick = (event, modal) => {\n    const button = event.target.closest('button');\n    currentFlavor = button.dataset.flavor;\n    lastFlavor[currentCategoryId] = currentFlavor;\n\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-flavors button');\n    buttons.forEach(node => node.classList.remove('c4l-button-flavor-enabled'));\n    button.classList.add('c4l-button-flavor-enabled');\n    const componentButtons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-preview button');\n    componentButtons.forEach(componentButton => {\n        // Remove previous flavor.\n        if (componentButton.dataset.flavor != undefined) {\n            componentButton.classList.remove(componentButton.dataset.flavor);\n        }\n        componentButton.classList.add(currentFlavor);\n        componentButton.dataset.flavor = currentFlavor;\n        if (\n            (componentButton.dataset.flavorlist == '' || componentButton.dataset.flavorlist.split(',').includes(currentFlavor)) &&\n            componentButton.dataset.category == currentCategoryId\n        ) {\n            componentButton.classList.remove('c4l-hidden');\n        } else {\n            componentButton.classList.add('c4l-hidden');\n        }\n    });\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n    saveVariantPreferences(components);\n};\n\nconst updateComponentCode = (componentCode, selectedButton, placeholder) => {\n    componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n\n    // Return active variants for current component.\n    const variants = getVariantsClass(components[selectedButton].name);\n\n    // Apply variants to html component.\n    if (variants.length > 0) {\n        componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n        componentCode = componentCode.replace('{{VARIANTSHTML}}', getVariantsHtml(components[selectedButton].name));\n    } else {\n        componentCode = componentCode.replace('{{VARIANTS}}', '');\n        componentCode = componentCode.replace('{{VARIANTSHTML}}', '');\n    }\n\n    if (currentFlavor) {\n        componentCode = componentCode.replace('{{FLAVOR}}', currentFlavor);\n    } else {\n        componentCode = componentCode.replace('{{FLAVOR}}', '');\n    }\n\n    // Apply random IDs.\n    componentCode = applyRandomID(componentCode);\n\n    // Apply lang strings.\n    componentCode = applyLangStrings(componentCode);\n\n    return componentCode;\n};\n\n/**\n * Handle a click in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleButtonClick = async (event, editor, modal) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n\n    // Component button.\n    if (components[selectedButton]) {\n        const sel = editor.selection.getContent();\n        let componentCode = components[selectedButton].code;\n        const placeholder = (sel.length > 0 ? sel : components[selectedButton].text);\n\n        // Create a new node to replace the placeholder.\n        const randomId = generateRandomID();\n        const newNode = document.createElement('span');\n        newNode.dataset.id = randomId;\n        newNode.innerHTML = placeholder;\n        componentCode = updateComponentCode(componentCode, selectedButton, newNode.outerHTML);\n        // Sets new content.\n        editor.selection.setContent(componentCode);\n\n        // Select text.\n        const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n        if (nodeSel?.[0]) {\n            editor.selection.select(nodeSel[0]);\n        }\n\n        modal.destroy();\n        editor.focus();\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleButtonMouseEvent = (event, modal, show) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n    const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n    node.innerHTML = updateComponentCode(components[selectedButton].code, selectedButton, 'Lorem ipsum');\n\n    if (node) {\n        if (show) {\n            previewDefault.classList.toggle('c4l-hidden');\n            node.classList.toggle('c4l-hidden');\n        } else {\n            node.classList.toggle('c4l-hidden');\n            previewDefault.classList.toggle('c4l-hidden');\n        }\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a variant button.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleVariantMouseEvent = (event, modal, show) => {\n    const variant = event.target.closest('span');\n    const variantEnabled = variant.dataset.state == 'on';\n    const button = event.target.closest('button');\n\n    if (!variantEnabled) {\n        updateVariantComponentState(variant, button, modal, show, false);\n    }\n};\n\n\n/**\n * Handle a mouse event within the variant buttons.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n */\nconst handleVariantClick = (event, modal) => {\n    event.stopPropagation();\n    const variant = event.target.closest('span');\n    const button = event.target.closest('button');\n\n    updateVariantComponentState(variant, button, modal, false, true);\n\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + button.dataset.id + '\"]');\n    node.innerHTML = updateComponentCode(components[button.dataset.id].code, button.dataset.id, 'Lorem ipsum');\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        flavors: flavors,\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    //const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n    // Iterate over contexts.\n    categories.forEach((category) => {\n        filters.push({\n            name: category.displayname,\n            type: category.id,\n            filterClass: category.order === 1 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\nconst getComponentVariants = (component, variants) => {\n    const componentVariants = [];\n    component.variants.forEach(variant => {\n        if (variants[variant] !== undefined) {\n            componentVariants.push({\n                name: variant,\n                state: 'off',\n                imageClass: variant + '-variant-off',\n                title: langStrings.get(variant),\n                content: variants[variant].content,\n            });\n        }\n    });\n    return componentVariants;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} buttons\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const sel = editor.selection.getContent();\n\n    Object.values(components).forEach(component => {\n        buttons.push({\n            id: component.id, // TODO do dynamically, maybe we do not need an id\n            name: component.displayname,\n            type: component.compcat,\n            imageClass: 'c4l-' + component.name + '-icon',\n            htmlcode: component.code,\n            variants: getComponentVariants(component, variants),\n            flavorlist: component.flavors.join(','),\n            category: component.compcat,\n        });\n    });\n\n    return buttons;\n};\n\nconst getC4LData = async() => {\n    const data = await fetchMany([{\n        methodname: 'tiny_c4l_get_c4l_data',\n        args: {},\n    }])[0];\n\n    // TODO error handling\n    const indexedComponents = [];\n    data.components.forEach(component => {\n        indexedComponents[component.id] = component;\n    });\n\n    const indexedVariants = [];\n    data.variants.forEach(variant => {\n        indexedVariants[variant.name] = variant;\n    });\n\n    return {\n        components: indexedComponents,\n        variants: indexedVariants,\n        categories: data.categories,\n        flavors: data.flavors,\n    };\n};\n\n/**\n * Get variants for the dialogue.\n *\n * @param  {string} component\n * @param  {object} elements\n * @return {object} Variants for a component\n */\nconst getVariantsState = (component, elements) => {\n    const variants = [];\n    let variantState = '';\n    let variantClass = '';\n\n    // Max 3 variants.\n    if (elements.length > 3) {\n        elements = elements.slice(0, 2);\n    }\n\n    elements.forEach((variant, index) => {\n        if (variantExists(component, variant)) {\n            variantState = 'on';\n            variantClass = 'on ';\n        } else {\n            variantState = 'off';\n            variantClass = '';\n        }\n        variantClass += variant + '-variant-' + variantState;\n        variants.push({\n            id: index,\n            name: variant,\n            state: variantState,\n            imageClass: variantClass,\n            title: langStrings.get(variant),\n        });\n    });\n\n    return variants;\n};\n\n/**\n * Update a variant component UI.\n *\n * @param {obj} variant\n * @param {obj} button\n * @param {obj} modal\n * @param {bool} show\n * @param {bool} updateHtml\n */\nconst updateVariantComponentState = (variant, button, modal, show, updateHtml) => {\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const selectedButton = button.dataset.id;\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + selectedButton + '\"] .' + componentClass);\n    const variantPreview = modal.getRoot()[0]\n        .querySelector('span[data-id=\"variantHTML-' + selectedButton + '\"]');\n    let variantsHtml = '';\n\n    if (previewComponent) {\n        if (updateHtml) {\n            if (variant.dataset.state == 'on') {\n                removeVariant(components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, false);\n                previewComponent.classList.remove(selectedVariant);\n            } else {\n                addVariant(components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, true);\n                previewComponent.classList.add(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = getVariantsHtml(components[selectedButton].name);\n            }\n        } else {\n            variantsHtml = getVariantsHtml(components[selectedButton].name);\n            if (show) {\n                previewComponent.classList.add(selectedVariant);\n                variantsHtml += getVariantHtml(variant.dataset.variant);\n            } else {\n                previewComponent.classList.remove(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = variantsHtml;\n            }\n        }\n    } else {\n        // Update variants preferences.\n        if (variant.dataset.state == 'on') {\n            removeVariant(components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, false);\n        } else {\n            addVariant(components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, true);\n        }\n    }\n};\n\n/**\n * Update a variant button UI.\n *\n * @param {obj} variant\n * @param {bool} activate\n */\nconst updateVariantButtonState = (variant, activate) => {\n    if (activate) {\n        variant.dataset.state = 'on';\n        variant.classList.remove(variant.dataset.variant + '-variant-off');\n        variant.classList.add(variant.dataset.variant + '-variant-on');\n        variant.classList.add('on');\n    } else {\n        variant.dataset.state = 'off';\n        variant.classList.remove(variant.dataset.variant + '-variant-on');\n        variant.classList.add(variant.dataset.variant + '-variant-off');\n        variant.classList.remove('on');\n    }\n};\n\n/**\n * Show/hide buttons depend on selected context.\n *\n * @param  {object} modal\n * @param  {String} context\n */\nconst showCategoryButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Replace all localized strings.\n *\n * @param  {String} text\n * @return {String} String with lang tags replaced with a localized string.\n */\nconst applyLangStrings = (text) => {\n    const compRegex = /{{#([^}]*)}}/g;\n\n    [...text.matchAll(compRegex)].forEach(strLang => {\n        text = text.replace('{{#' + strLang[1] + '}}', langStrings.get(strLang[1]));\n    });\n\n    return text;\n};\n\n/**\n * Generates a random string.\n * @return {string} A random string\n */\nconst generateRandomID = () => {\n    const timestamp = new Date().getTime();\n    return 'R' + Math.round(Math.random() * 100000) + '-' + timestamp;\n};\n\n/**\n * Replace all ID tags with a random string.\n * @param  {String} text\n * @return {String} String with all ID tags replaced with a random string.\n */\nconst applyRandomID = (text) => {\n    const compRegex = /{{@ID}}/g;\n\n    if (text.match(compRegex)) {\n        text = text.replace(compRegex, generateRandomID());\n    }\n\n    return text;\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n    const compRegex = /{{#([^}]*)}}/g;\n\n    components.forEach(element => {\n        // Get lang strings from components.\n        [...element.code.matchAll(compRegex)].forEach(strLang => {\n            if (keys.indexOf(strLang[1]) === -1) {\n                keys.push(strLang[1]);\n            }\n        });\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["userStudent","previewC4L","allowedComponents","components","categories","flavors","variants","langStrings","currentFlavor","currentCategoryId","lastFlavor","async","data","getC4LData","editor","getAllStrings","then","displayDialogue","Object","assign","templateContext","getTemplateContext","modal","ModalFactory","create","type","C4LModal","TYPE","large","targetElm","closest","classList","add","show","getRoot","on","ModalEvents","hidden","handleModalHidden","filters","querySelectorAll","forEach","node","addEventListener","event","handleButtonFilterClick","handleButtonFlavorClick","handleButtonClick","handleButtonMouseEvent","handleVariantClick","length","click","clickFlavor","button","target","dataset","filter","remove","showFlavors","showCategoryButtons","flavor","availableFlavors","flavorButtons","categoryId","split","includes","componentButton","undefined","flavorlist","category","updateComponentCode","componentCode","selectedButton","placeholder","replace","name","join","applyRandomID","applyLangStrings","id","sel","selection","getContent","code","text","randomId","generateRandomID","newNode","document","createElement","innerHTML","outerHTML","setContent","nodeSel","dom","select","destroy","focus","querySelector","previewDefault","toggle","stopPropagation","variant","updateVariantComponentState","elementid","buttons","getButtons","getFilters","preview","push","displayname","filterClass","order","getComponentVariants","component","componentVariants","state","imageClass","title","get","content","values","compcat","htmlcode","methodname","args","indexedComponents","indexedVariants","updateHtml","selectedVariant","componentClass","classcomponent","previewComponent","variantPreview","variantsHtml","updateVariantButtonState","activate","context","showNodes","hideNodes","matchAll","strLang","timestamp","Date","getTime","Math","round","random","compRegex","match","keys","element","indexOf","stringValues","map","key","Map","index"],"mappings":"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"}