{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview\n} from './options';\nimport ModalEvents from 'core/modal_events';\nimport {\n    addVariant,\n    getVariantsClass,\n    getVariantHtml,\n    getVariantsHtml,\n    loadVariantPreferences,\n    removeVariant,\n    saveVariantPreferences,\n    setVariants,\n    variantExists,\n    setComponents\n} from './variantslib';\nimport {call as fetchMany} from 'core/ajax';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet components = null;\nlet categories = null;\nlet flavors = null;\nlet variants = null;\nlet langStrings = {};\n\nlet currentFlavor = '';\nlet currentCategoryId = 1;\n\n/**\n * Handle action\n *\n * @param {TinyMCE} editor\n */\nexport const handleAction = async(editor) => {\n    let data = await getC4LData();\n    components = data.components;\n    categories = data.categories;\n    flavors = data.flavors;\n    variants = data.variants;\n\n    setComponents(components);\n    setVariants(variants);\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    langStrings = await getAllStrings();\n    allowedComponents = getallowedComponents(editor);\n    loadVariantPreferences().then(() => displayDialogue(editor));\n};\n\n/**\n * Display modal\n *\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n    const templateContext = await getTemplateContext(editor, data);\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: templateContext,\n        large: true,\n    });\n\n    // Set modal size when no preview.\n    if (!previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-no-preview');\n    }\n    modal.show();\n\n    // Event modal listener.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n\n    // Event filters listener.\n    const filters = modal.getRoot()[0].querySelectorAll('.c4l-button-filter');\n    filters.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFilterClick(event, modal);\n        });\n    });\n\n    // Event flavor selector listener.\n    const flavorbuttons = modal.getRoot()[0].querySelectorAll('.c4l-button-flavor');\n    flavorbuttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFlavorClick(event, modal);\n        });\n    });\n\n    // Event buttons listeners.\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4lt-dialog-button');\n    buttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonClick(event, editor, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleButtonMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleButtonMouseEvent(event, modal, false);\n            });\n        }\n    });\n\n    // Event variants listeners.\n    const variants = modal.getRoot()[0].querySelectorAll('.c4l-button-variant');\n    variants.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleVariantClick(event, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleVariantMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleVariantMouseEvent(event, modal, false);\n            });\n        }\n    });\n};\n\n/**\n * Handle a click within filter button.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleButtonFilterClick = (event, modal) => {\n    const button = event.target.closest('button');\n    const currentCategoryId = button.dataset.filter;\n\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n    buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n    button.classList.add('c4l-button-filter-enabled');\n\n    showFlavors(modal, currentCategoryId);\n\n    // Show/hide component buttons.\n    showCategoryButtons(modal, currentCategoryId);\n};\n\nconst showFlavors = (modal, categoryId) => {\n    const flavorButtons = modal.getRoot()[0].querySelectorAll('.c4l-button-flavor');\n    flavorButtons.forEach(node => {\n        node.classList.remove('c4l-button-flavor-enabled');\n        let categories = node.dataset.categories.split(',');\n        if (categories.length == 0 || categories.includes(categoryId)) {\n            node.classList.remove('c4l-hidden');\n        } else {\n            node.classList.add('c4l-hidden');\n        }\n    });\n};\n\nconst handleButtonFlavorClick = (event, modal) => {\n    const button = event.target.closest('button');\n    currentFlavor = button.dataset.flavor;\n\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-flavors button');\n    buttons.forEach(node => node.classList.remove('c4l-button-flavor-enabled'));\n    button.classList.add('c4l-button-flavor-enabled');\n    const componentButtons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-preview button');\n    componentButtons.forEach(componentButton => {\n        // TODO remove old class :)\n        componentButton.querySelector('.c4l-button-text').classList.add(currentFlavor);\n    });\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n    saveVariantPreferences(components);\n};\n\nconst updateComponentCode = (componentCode, selectedButton, placeholder) => {\n    componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n\n    // Return active variants for current component.\n    const variants = getVariantsClass(components[selectedButton].name);\n\n    // Apply variants to html component.\n    if (variants.length > 0) {\n        componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n        componentCode = componentCode.replace('{{VARIANTSHTML}}', getVariantsHtml(components[selectedButton].name));\n    } else {\n        componentCode = componentCode.replace('{{VARIANTS}}', '');\n        componentCode = componentCode.replace('{{VARIANTSHTML}}', '');\n    }\n\n    if (currentFlavor) {\n        componentCode = componentCode.replace('{{FLAVOR}}', currentFlavor);\n    } else {\n        componentCode = componentCode.replace('{{FLAVOR}}', '');\n    }\n\n    // Apply random IDs.\n    componentCode = applyRandomID(componentCode);\n\n    // Apply lang strings.\n    componentCode = applyLangStrings(componentCode);\n\n    return componentCode;\n};\n\n/**\n * Handle a click in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleButtonClick = async (event, editor, modal) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n\n    // Component button.\n    if (components[selectedButton]) {\n        const sel = editor.selection.getContent();\n        let componentCode = components[selectedButton].code;\n        const placeholder = (sel.length > 0 ? sel : components[selectedButton].text);\n\n        // Create a new node to replace the placeholder.\n        const randomId = generateRandomID();\n        const newNode = document.createElement('span');\n        newNode.dataset.id = randomId;\n        newNode.innerHTML = placeholder;\n        componentCode = updateComponentCode(componentCode, selectedButton, newNode.outerHTML);\n        // Sets new content.\n        editor.selection.setContent(componentCode);\n\n        // Select text.\n        const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n        if (nodeSel?.[0]) {\n            editor.selection.select(nodeSel[0]);\n        }\n\n        modal.destroy();\n        editor.focus();\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleButtonMouseEvent = (event, modal, show) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n    const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n    node.innerHTML = updateComponentCode(components[selectedButton].code, selectedButton, 'Lorem ipsum');\n\n    if (node) {\n        if (show) {\n            previewDefault.classList.toggle('c4l-hidden');\n            node.classList.toggle('c4l-hidden');\n        } else {\n            node.classList.toggle('c4l-hidden');\n            previewDefault.classList.toggle('c4l-hidden');\n        }\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a variant button.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleVariantMouseEvent = (event, modal, show) => {\n    const variant = event.target.closest('span');\n    const variantEnabled = variant.dataset.state == 'on';\n    const button = event.target.closest('button');\n\n    if (!variantEnabled) {\n        updateVariantComponentState(variant, button, modal, show, false);\n    }\n};\n\n\n/**\n * Handle a mouse event within the variant buttons.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n */\nconst handleVariantClick = (event, modal) => {\n    event.stopPropagation();\n    const variant = event.target.closest('span');\n    const button = event.target.closest('button');\n    updateVariantComponentState(variant, button, modal, false, true);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        flavors: flavors,\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    //const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n    // Iterate over contexts.\n    categories.forEach((category) => {\n        filters.push({\n            name: category.displayname,\n            type: category.id,\n            filterClass: category.order === 1 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\nconst getComponentVariants = (component, variants) => {\n    const componentVariants = [];\n    component.variants.forEach(variant => {\n        if (variants[variant] !== undefined) {\n            componentVariants.push({\n                name: variant,\n                state: 'off',\n                imageClass: 'c4l-' + variant + '-variant-off',\n                title: langStrings.get(variant),\n                content: variants[variant].content,\n            });\n        }\n    });\n    return componentVariants;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} buttons\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const sel = editor.selection.getContent();\n\n    Object.values(components).forEach(component => {\n        buttons.push({\n            id: component.id, // TODO do dynamically, maybe we do not need an id\n            name: component.displayname,\n            type: component.compcat,\n            imageClass: 'c4l-' + component.imageclass,\n            htmlcode: component.code,\n            variants: getComponentVariants(component, variants),\n        });\n    });\n\n    return buttons;\n};\n\nconst getC4LData = async() => {\n    const data = await fetchMany([{\n        methodname: 'tiny_c4l_get_c4l_data',\n        args: {},\n    }])[0];\n\n    // TODO error handling\n    const indexedComponents = [];\n    data.components.forEach(component => {\n        console.log(component);\n        indexedComponents[component.id] = component;\n    });\n\n    const indexedVariants = [];\n    data.variants.forEach(variant => {\n        indexedVariants[variant.name] = variant;\n    });\n\n    return {\n        components: indexedComponents,\n        variants: indexedVariants,\n        categories: data.categories,\n        flavors: data.flavors,\n    };\n};\n\n/**\n * Get variants for the dialogue.\n *\n * @param  {string} component\n * @param  {object} elements\n * @return {object} Variants for a component\n */\nconst getVariantsState = (component, elements) => {\n    const variants = [];\n    let variantState = '';\n    let variantClass = '';\n\n    // Max 3 variants.\n    if (elements.length > 3) {\n        elements = elements.slice(0, 2);\n    }\n\n    elements.forEach((variant, index) => {\n        if (variantExists(component, variant)) {\n            variantState = 'on';\n            variantClass = 'on ';\n        } else {\n            variantState = 'off';\n            variantClass = '';\n        }\n        variantClass += variant + '-variant-' + variantState;\n        variants.push({\n            id: index,\n            name: variant,\n            state: variantState,\n            imageClass: variantClass,\n            title: langStrings.get(variant),\n        });\n    });\n\n    return variants;\n};\n\n/**\n * Update a variant component UI.\n *\n * @param {obj} variant\n * @param {obj} button\n * @param {obj} modal\n * @param {bool} show\n * @param {bool} updateHtml\n */\nconst updateVariantComponentState = (variant, button, modal, show, updateHtml) => {\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const selectedButton = button.dataset.id;\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + selectedButton + '\"] .' + componentClass);\n    const variantPreview = modal.getRoot()[0]\n        .querySelector('span[data-id=\"variantHTML-' + selectedButton + '\"]');\n    let variantsHtml = '';\n\n    if (previewComponent) {\n        if (updateHtml) {\n            if (variant.dataset.state == 'on') {\n                removeVariant(components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, false);\n                previewComponent.classList.remove(selectedVariant);\n            } else {\n                addVariant(components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, true);\n                previewComponent.classList.add(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = getVariantsHtml(components[selectedButton].name);\n            }\n        } else {\n            variantsHtml = getVariantsHtml(components[selectedButton].name);\n            if (show) {\n                previewComponent.classList.add(selectedVariant);\n                variantsHtml += getVariantHtml(variant.dataset.variant);\n            } else {\n                previewComponent.classList.remove(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = variantsHtml;\n            }\n        }\n    } else {\n        // Update variants preferences.\n        if (variant.dataset.state == 'on') {\n            removeVariant(components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, false);\n        } else {\n            addVariant(components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, true);\n        }\n    }\n};\n\n/**\n * Update a variant button UI.\n *\n * @param {obj} variant\n * @param {bool} activate\n */\nconst updateVariantButtonState = (variant, activate) => {\n    if (activate) {\n        variant.dataset.state = 'on';\n        variant.classList.remove(variant.dataset.variant + '-variant-off');\n        variant.classList.add(variant.dataset.variant + '-variant-on');\n        variant.classList.add('on');\n    } else {\n        variant.dataset.state = 'off';\n        variant.classList.remove(variant.dataset.variant + '-variant-on');\n        variant.classList.add(variant.dataset.variant + '-variant-off');\n        variant.classList.remove('on');\n    }\n};\n\n/**\n * Show/hide buttons depend on selected context.\n *\n * @param  {object} modal\n * @param  {String} context\n */\nconst showCategoryButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Replace all localized strings.\n *\n * @param  {String} text\n * @return {String} String with lang tags replaced with a localized string.\n */\nconst applyLangStrings = (text) => {\n    const compRegex = /{{#([^}]*)}}/g;\n\n    [...text.matchAll(compRegex)].forEach(strLang => {\n        text = text.replace('{{#' + strLang[1] + '}}', langStrings.get(strLang[1]));\n    });\n\n    return text;\n};\n\n/**\n * Generates a random string.\n * @return {string} A random string\n */\nconst generateRandomID = () => {\n    const timestamp = new Date().getTime();\n    return 'R' + Math.round(Math.random() * 100000) + '-' + timestamp;\n};\n\n/**\n * Replace all ID tags with a random string.\n * @param  {String} text\n * @return {String} String with all ID tags replaced with a random string.\n */\nconst applyRandomID = (text) => {\n    const compRegex = /{{@ID}}/g;\n\n    if (text.match(compRegex)) {\n        text = text.replace(compRegex, generateRandomID());\n    }\n\n    return text;\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n    const compRegex = /{{#([^}]*)}}/g;\n\n    components.forEach(element => {\n        keys.push(element.name);\n        element.variants.forEach(variant => {\n            if (keys.indexOf(variant) === -1) {\n                keys.push(variant);\n            }\n        });\n        // Get lang strings from components.\n        [...element.code.matchAll(compRegex)].forEach(strLang => {\n            if (keys.indexOf(strLang[1]) === -1) {\n                keys.push(strLang[1]);\n            }\n        });\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["userStudent","previewC4L","allowedComponents","components","categories","flavors","variants","langStrings","currentFlavor","async","data","getC4LData","editor","getAllStrings","then","displayDialogue","Object","assign","templateContext","getTemplateContext","modal","ModalFactory","create","type","C4LModal","TYPE","large","targetElm","closest","classList","add","show","getRoot","on","ModalEvents","hidden","handleModalHidden","querySelectorAll","forEach","node","addEventListener","event","handleButtonFilterClick","handleButtonFlavorClick","handleButtonClick","handleButtonMouseEvent","handleVariantClick","handleVariantMouseEvent","button","target","currentCategoryId","dataset","filter","remove","showFlavors","showCategoryButtons","categoryId","split","length","includes","flavor","componentButton","querySelector","updateComponentCode","componentCode","selectedButton","placeholder","replace","name","join","applyRandomID","applyLangStrings","id","sel","selection","getContent","code","text","randomId","generateRandomID","newNode","document","createElement","innerHTML","outerHTML","setContent","nodeSel","dom","select","destroy","focus","previewDefault","toggle","variant","variantEnabled","state","updateVariantComponentState","stopPropagation","elementid","buttons","getButtons","filters","getFilters","preview","category","push","displayname","filterClass","order","getComponentVariants","component","componentVariants","undefined","imageClass","title","get","content","values","compcat","imageclass","htmlcode","methodname","args","indexedComponents","console","log","indexedVariants","updateHtml","selectedVariant","componentClass","classcomponent","previewComponent","variantPreview","variantsHtml","updateVariantButtonState","activate","context","showNodes","hideNodes","matchAll","strLang","timestamp","Date","getTime","Math","round","random","compRegex","match","keys","element","indexOf","stringValues","map","key","Map","index"],"mappings":"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"}