{"version":3,"file":"management.min.js","sources":["../src/management.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {exception as displayException, deleteCancelPromise} from 'core/notification';\nimport {call as fetchMany} from 'core/ajax';\n\nexport const init = async() => {\n\n    // Add listener for adding a new source.\n    let addsources = document.getElementsByClassName('add');\n    addsources.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to edit sources.\n    let editsources = document.getElementsByClassName('edit');\n    editsources.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to import xml files.\n    let importxml = document.getElementById('c4l_import');\n    importxml.addEventListener('click', async(e) => {\n        importModal(e);\n    });\n\n    // Add listener to delete sources.\n    let deletesources = document.getElementsByClassName('delete');\n    deletesources.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            deleteModal(e, element.dataset.id, element.dataset.title, element.dataset.table);\n        });\n    });\n\n    // Add listener to select compcat to show corresponding items.\n    let compcats = document.getElementsByClassName('compcat');\n    compcats.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showItems(e, element.dataset.compcat);\n        });\n    });\n};\n\n/**\n * Show dynamic form to add/edit a source.\n * @param {*} e\n * @param {*} id\n * @param {*} table\n */\nfunction showModal(e, id, table) {\n    e.preventDefault();\n    let title;\n    if (id == 0) {\n        title = getString('additem', 'tiny_c4l');\n    } else {\n        title = getString('edititem', 'tiny_c4l');\n    }\n\n    const modalForm = new ModalForm({\n        // Set formclass, depending on component.\n        formClass: \"tiny_c4l\\\\form\\\\management_\" + table + \"_form\",\n        args: {\n            id: id,\n        },\n        modalConfig: {title: title},\n    });\n    // Reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n}\n\n\n/**\n * Show dynamic form to import xml backups.\n * @param {*} e\n */\nfunction importModal(e) {\n    e.preventDefault();\n    let title = getString('import', 'tiny_c4l');\n\n    const modalForm = new ModalForm({\n        // Load import form.\n        formClass: \"tiny_c4l\\\\form\\\\management_import_form\",\n        args: {},\n        modalConfig: {title: title},\n    });\n    // Reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n}\n\n\n/**\n * Show dynamic form to delete a source.\n * @param {*} e\n * @param {*} id\n * @param {*} title\n * @param {*} table\n */\nfunction deleteModal(e, id, title, table) {\n    e.preventDefault();\n\n    deleteCancelPromise(\n        getString('delete', 'tiny_c4l', title),\n        getString('deletewarning', 'tiny_c4l'),\n    ).then(async() => {\n        if (id !== 0) {\n            try {\n                const deleted = await deleteItem(id, table);\n                if (deleted) {\n                    const link = document.querySelector('[data-table=\"' + table + '\"][data-id=\"' + id + '\"]');\n                    if (link) {\n                        const card = link.closest(\".item\");\n                        card.remove();\n                    }\n                }\n            } catch (error) {\n                displayException(error);\n            }\n        }\n        return;\n    }).catch(() => {\n        return;\n    });\n}\n\n/**\n * Delete c4l items.\n * @param {*} id\n * @param {*} table\n * @returns {mixed}\n */\nexport const deleteItem = (\n    id,\n    table,\n) => fetchMany(\n    [{\n    methodname: 'tiny_c4l_delete_item',\n    args: {\n        id,\n        table,\n}}])[0];\n\n/**\n * Show items after clicking a compcat.\n * @param {*} e\n * @param {*} compcat\n */\nfunction showItems(e, compcat) {\n    // But first hide all items.\n    let itemsHide = document.querySelectorAll('.flavor, .component, .variant');\n    itemsHide.forEach(element => {\n        element.classList.add('hidden');\n    });\n\n    // Show component with compcat name and read the flavors.\n    let itemsShow = document.getElementsByClassName(compcat);\n    let usedFlavors = [];\n    itemsShow.forEach(element => {\n        element.classList.remove('hidden');\n        // Get all flavors to show.\n        let flavors = element.dataset.flavors.split(' ');\n        for (let value of flavors) {\n            if (!usedFlavors.includes(value) && value.length != 0) {\n                usedFlavors.push(value);\n            }\n        }\n    });\n\n    // Show the flavors.\n    let flavorstring = usedFlavors.map(item => `.${item}`).join(', ');\n    if (flavorstring.length) {\n        let flavorsShow = document.querySelectorAll(flavorstring);\n        flavorsShow.forEach(element => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    // Show add buttons.\n    let addsShow = document.getElementsByClassName('addcontainer');\n    addsShow.forEach(element => {\n        element.classList.remove('hidden');\n    });\n}\n"],"names":["showModal","e","id","table","title","preventDefault","modalForm","ModalForm","formClass","args","modalConfig","addEventListener","events","FORM_SUBMITTED","location","reload","show","async","document","getElementsByClassName","forEach","element","dataset","getElementById","importModal","then","deleteItem","link","querySelector","closest","remove","error","catch","deleteModal","compcat","querySelectorAll","classList","add","itemsShow","usedFlavors","flavors","split","value","includes","length","push","flavorstring","map","item","join","showItems","methodname"],"mappings":"kVAoDSA,UAAUC,EAAGC,GAAIC,WAElBC,MADJH,EAAEI,iBAGED,MADM,GAANF,IACQ,mBAAU,UAAW,aAErB,mBAAU,WAAY,kBAG5BI,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,8BAAgCL,MAAQ,QACnDM,KAAM,CACFP,GAAIA,IAERQ,YAAa,CAACN,MAAOA,SAGzBE,UAAUK,iBAAiBL,UAAUM,OAAOC,gBAAgB,IAAMC,SAASC,WAE3ET,UAAUU,qBAnEMC,UAGCC,SAASC,uBAAuB,OACtCC,SAAQC,UACfA,QAAQV,iBAAiB,SAASM,MAAAA,IAC9BjB,UAAUC,EAAGoB,QAAQC,QAAQpB,GAAImB,QAAQC,QAAQnB,aAKvCe,SAASC,uBAAuB,QACtCC,SAAQC,UAChBA,QAAQV,iBAAiB,SAASM,MAAAA,IAC9BjB,UAAUC,EAAGoB,QAAQC,QAAQpB,GAAImB,QAAQC,QAAQnB,aAKzCe,SAASK,eAAe,cAC9BZ,iBAAiB,SAASM,MAAAA,cAuDnBhB,GACjBA,EAAEI,qBACED,OAAQ,mBAAU,SAAU,kBAE1BE,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,yCACXC,KAAM,GACNC,YAAa,CAACN,MAAOA,SAGzBE,UAAUK,iBAAiBL,UAAUM,OAAOC,gBAAgB,IAAMC,SAASC,WAE3ET,UAAUU,OAnENQ,CAAYvB,MAIIiB,SAASC,uBAAuB,UACtCC,SAAQC,UAClBA,QAAQV,iBAAiB,SAASM,MAAAA,cAwErBhB,EAAGC,GAAIE,MAAOD,OAC/BF,EAAEI,wDAGE,mBAAU,SAAU,WAAYD,QAChC,mBAAU,gBAAiB,aAC7BqB,MAAKR,aACQ,IAAPf,gBAE0BwB,WAAWxB,GAAIC,OACxB,OACHwB,KAAOT,SAASU,cAAc,gBAAkBzB,MAAQ,eAAiBD,GAAK,SAChFyB,KAAM,CACOA,KAAKE,QAAQ,SACrBC,WAGf,MAAOC,mCACYA,WAI1BC,OAAM,SA7FDC,CAAYhC,EAAGoB,QAAQC,QAAQpB,GAAImB,QAAQC,QAAQlB,MAAOiB,QAAQC,QAAQnB,aAKnEe,SAASC,uBAAuB,WACtCC,SAAQC,UACbA,QAAQV,iBAAiB,SAASM,MAAAA,cAiHvBhB,EAAGiC,SAEFhB,SAASiB,iBAAiB,iCAChCf,SAAQC,UACdA,QAAQe,UAAUC,IAAI,iBAItBC,UAAYpB,SAASC,uBAAuBe,SAC5CK,YAAc,GAClBD,UAAUlB,SAAQC,UACdA,QAAQe,UAAUN,OAAO,cAErBU,QAAUnB,QAAQC,QAAQkB,QAAQC,MAAM,SACvC,IAAIC,SAASF,QACTD,YAAYI,SAASD,QAA0B,GAAhBA,MAAME,QACtCL,YAAYM,KAAKH,cAMzBI,aAAeP,YAAYQ,KAAIC,iBAAYA,QAAQC,KAAK,SACxDH,aAAaF,OAAQ,CACH1B,SAASiB,iBAAiBW,cAChC1B,SAAQC,UAChBA,QAAQe,UAAUN,OAAO,aAKlBZ,SAASC,uBAAuB,gBACtCC,SAAQC,UACbA,QAAQe,UAAUN,OAAO,aAjJrBoB,CAAUjD,EAAGoB,QAAQC,QAAQY,sBAgG5BR,WAAa,CACtBxB,GACAC,SACC,cACD,CAAC,CACDgD,WAAY,uBACZ1C,KAAM,CACFP,GAAAA,GACAC,MAAAA,UACH"}