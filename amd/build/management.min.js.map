{"version":3,"file":"management.min.js","sources":["../src/management.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport { get_string as getString } from 'core/str';\nimport { exception as displayException, deleteCancelPromise } from 'core/notification';\nimport { call as fetchMany } from 'core/ajax';\n\n\nexport const init = async(params) => {\n\n    // Add listener for adding a new source.\n    let addsources = document.getElementsByClassName('add');\n    addsources.forEach(element => {\n        element.addEventListener('click', async (e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to edit sources.\n    let editsources = document.getElementsByClassName('edit');\n    editsources.forEach(element => {\n        element.addEventListener('click', async (e) => {\n            showModal(e, element.dataset.id, element.dataset.table);\n        });\n    });\n\n    // Add listener to import xml files.\n    let importxml = document.getElementById('c4l_import');\n    importxml.addEventListener('click', async (e) => {\n        importModal(e);\n    });\n\n    // Add listener to delete sources.\n    let deletesources = document.getElementsByClassName('delete');\n    deletesources.forEach(element => {\n        element.addEventListener('click', async (e) => {\n            deleteModal(e, element.dataset.id, element.dataset.title, element.dataset.table);\n        });\n    });\n\n    // Add listener to select compcat to show corresponding items.\n    let compcats = document.getElementsByClassName('compcat');\n    compcats.forEach(element => {\n        element.addEventListener('click', async (e) => {\n            showItems(e, element.dataset.compcat);\n        });\n    });\n\n    // Add listener to manage component flavor relation.\n    let compflavor = document.getElementById('c4l_compflavor_button');\n    compflavor.addEventListener('click', async (e) => {\n        compflavorModal(e);\n    });\n\n    // Add image and text to item setting click area.\n    let enlargeItems = document.querySelectorAll(\n        '.flavor .card-body > div, .component .card-body > div, .variant .card-body > div'\n    );\n    enlargeItems.forEach(element => {\n        element.addEventListener('click', async (e) => {\n            let item = e.target.closest('.item');\n            item.querySelector('a.edit').click();\n        });\n    });\n\n    // After submitting a new item, reset active compcat.\n    if (params.compcatactive) {\n        let compcat = document.querySelector('.compcat[data-compcat=\"' + params.compcatactive + '\"]');\n        if (compcat) {\n            showItems(false, params.compcatactive);\n            compcat.classList.add('active');\n        }\n    }\n};\n\n/**\n * Show dynamic form to add/edit a source.\n * @param {*} e\n * @param {*} id\n * @param {*} table\n */\nfunction showModal(e, id, table) {\n    e.preventDefault();\n    let title;\n    if (id == 0) {\n        title = getString('additem', 'tiny_c4l');\n    } else {\n        title = getString('edititem', 'tiny_c4l');\n    }\n\n    const modalForm = new ModalForm({\n        // Set formclass, depending on component.\n        formClass: \"tiny_c4l\\\\form\\\\management_\" + table + \"_form\",\n        args: {\n            id: id,\n        },\n        modalConfig: { title: title },\n    });\n    // Conditional reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => reloadIfNew(modalForm.getFormNode()));\n\n    modalForm.show();\n}\n\n\n/**\n * Show dynamic form to import xml backups.\n * @param {*} e\n */\nfunction importModal(e) {\n    e.preventDefault();\n    let title = getString('import', 'tiny_c4l');\n\n    const modalForm = new ModalForm({\n        // Load import form.\n        formClass: \"tiny_c4l\\\\form\\\\management_import_form\",\n        args: {},\n        modalConfig: { title: title },\n    });\n    // Reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n}\n\n/**\n * Load modal to edit icon urls.\n * @param {*} e\n */\nfunction compflavorModal(e) {\n    e.preventDefault();\n    let title = getString('manage', 'tiny_c4l');\n\n    const modalForm = new ModalForm({\n        // Load import form.\n        formClass: \"tiny_c4l\\\\form\\\\management_comp_flavor_form\",\n        args: {},\n        modalConfig: { title: title },\n    });\n\n    modalForm.show();\n}\n\n/**\n * Show dynamic form to delete a source.\n * @param {*} e\n * @param {*} id\n * @param {*} title\n * @param {*} table\n */\nfunction deleteModal(e, id, title, table) {\n    e.preventDefault();\n\n    deleteCancelPromise(\n        getString('delete', 'tiny_c4l', title),\n        getString('deletewarning', 'tiny_c4l'),\n    ).then(async () => {\n        if (id !== 0) {\n            try {\n                const deleted = await deleteItem(id, table);\n                if (deleted) {\n                    const link = document.querySelector('[data-table=\"' + table + '\"][data-id=\"' + id + '\"]');\n                    if (link) {\n                        const card = link.closest(\".item\");\n                        card.remove();\n                    }\n                }\n            } catch (error) {\n                displayException(error);\n            }\n        }\n        return;\n    }).catch(() => {\n        return;\n    });\n}\n\n/**\n * Delete c4l items.\n * @param {*} id\n * @param {*} table\n * @returns {mixed}\n */\nexport const deleteItem = (\n    id,\n    table,\n) => fetchMany(\n    [{\n        methodname: 'tiny_c4l_delete_item',\n        args: {\n            id,\n            table,\n        }\n    }])[0];\n\n/**\n * Show items after clicking a compcat.\n * @param {*} e\n * @param {*} compcat\n */\nfunction showItems(e, compcat) {\n    // But first hide all items.\n    let itemsHide = document.querySelectorAll('.flavor, .component, .variant');\n    itemsHide.forEach(element => {\n        element.classList.add('hidden');\n    });\n\n    // Show component with compcat name and read the flavors.\n    let itemsShow = document.getElementsByClassName(compcat);\n    let usedFlavors = [];\n    itemsShow.forEach(element => {\n        element.classList.remove('hidden');\n        // Get all flavors to show.\n        let flavors = element.dataset.flavors.split(' ');\n        for (let value of flavors) {\n            if (!usedFlavors.includes(value) && value.length != 0) {\n                usedFlavors.push(value);\n            }\n        }\n    });\n\n    // Show the flavors.\n    let flavorstring = usedFlavors.map(item => `.${item}`).join(', ');\n    if (flavorstring.length) {\n        let flavorsShow = document.querySelectorAll(flavorstring);\n        flavorsShow.forEach(element => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    // Show add buttons.\n    let addsShow = document.getElementsByClassName('addcontainer');\n    addsShow.forEach(element => {\n        element.classList.remove('hidden');\n    });\n\n    // Unmark all and mark clicked compcat.\n    if (e) {\n        let items = document.getElementsByClassName('compcat');\n        items.forEach(element => {\n            element.classList.remove('active');\n        });\n        let item = e.target.closest('.compcat');\n        item.classList.add('active');\n    }\n}\n\n\n/**\n * Reload for new items.\n * @param {*} form\n */\nfunction reloadIfNew(form) {\n    // Newly created element?\n    if (!form.elements['id'].value) {\n        // Reload page with active compcat.\n        const compcat = document.querySelector('.compcat.active');\n        const currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.set('compcat', compcat.dataset.compcat);\n        window.location.href = currentUrl.toString();\n    }\n}\n"],"names":["showModal","e","id","table","title","preventDefault","modalForm","ModalForm","formClass","args","modalConfig","addEventListener","events","FORM_SUBMITTED","form","elements","value","compcat","document","querySelector","currentUrl","URL","window","location","href","searchParams","set","dataset","toString","reloadIfNew","getFormNode","show","async","getElementsByClassName","forEach","element","getElementById","reload","importModal","then","deleteItem","link","closest","remove","error","catch","deleteModal","showItems","compflavorModal","querySelectorAll","target","click","params","compcatactive","classList","add","methodname","itemsShow","usedFlavors","flavors","split","includes","length","push","flavorstring","map","item","join"],"mappings":"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"}