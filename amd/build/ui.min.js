define("tiny_c4l/ui",["exports","./common","./modal","core/modal_factory","./components","core/str","./options","core/modal_events","./variantslib","core/ajax"],(function(_exports,_common,_modal,_modal_factory,_components,_str,_options,_modal_events,_variantslib,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny C4L UI.
   *
   * @module      tiny_c4l/ui
   * @copyright   2022 Marc Catal√† <reskit@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.handleAction=void 0,_modal=_interopRequireDefault(_modal),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);let userStudent=!1,previewC4L=!0,allowedComponents=[],components=null,categories=null,flavors=null,langStrings={},currentFlavor="";_exports.handleAction=async editor=>{userStudent=(0,_options.isStudent)(editor),previewC4L=(0,_options.showPreview)(editor),langStrings=await getAllStrings(),allowedComponents=(0,_options.getallowedComponents)(editor),(0,_variantslib.loadVariantPreferences)().then((()=>displayDialogue(editor)))};const displayDialogue=async editor=>{components||(components=await getComponents()),categories||(categories=await getCategories()),flavors||(flavors=await getFlavors());const data=Object.assign({},{}),templateContext=await getTemplateContext(editor,data),modal=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:templateContext,large:!0});previewC4L||editor.targetElm.closest("body").classList.add("c4l-modal-no-preview"),modal.show(),modal.getRoot().on(_modal_events.default.hidden,(()=>{handleModalHidden(editor)}));modal.getRoot()[0].querySelectorAll(".c4l-button-filter").forEach((node=>{node.addEventListener("click",(event=>{handleButtonFilterClick(event,modal)}))}));modal.getRoot()[0].querySelectorAll(".c4l-button-flavor").forEach((node=>{node.addEventListener("click",(event=>{handleButtonFlavorClick(event,modal)}))}));modal.getRoot()[0].querySelectorAll(".c4lt-dialog-button").forEach((node=>{node.addEventListener("click",(event=>{handleButtonClick(event,editor,modal)})),previewC4L&&(node.addEventListener("mouseenter",(event=>{handleButtonMouseEvent(event,modal,!0)})),node.addEventListener("mouseleave",(event=>{handleButtonMouseEvent(event,modal,!1)})))}));modal.getRoot()[0].querySelectorAll(".c4l-button-variant").forEach((node=>{node.addEventListener("click",(event=>{handleVariantClick(event,modal)})),previewC4L&&(node.addEventListener("mouseenter",(event=>{handleVariantMouseEvent(event,modal,!0)})),node.addEventListener("mouseleave",(event=>{handleVariantMouseEvent(event,modal,!1)})))}))},handleButtonFilterClick=(event,modal)=>{const button=event.target.closest("button"),currentCategoryId=button.dataset.filter;modal.getRoot()[0].querySelectorAll(".c4l-buttons-filters button").forEach((node=>node.classList.remove("c4l-button-filter-enabled"))),button.classList.add("c4l-button-filter-enabled"),showCategoryButtons(modal,currentCategoryId)},handleButtonFlavorClick=(event,modal)=>{const button=event.target.closest("button");currentFlavor=button.dataset.flavor;modal.getRoot()[0].querySelectorAll(".c4l-buttons-flavors button").forEach((node=>node.classList.remove("c4l-button-flavor-enabled"))),button.classList.add("c4l-button-flavor-enabled")},handleModalHidden=editor=>{editor.targetElm.closest("body").classList.remove("c4l-modal-no-preview"),(0,_variantslib.saveVariantPreferences)()},handleButtonClick=async(event,editor,modal)=>{const selectedButton=event.target.closest("button").dataset.id;if(components[selectedButton]){const sel=editor.selection.getContent();let componentCode=components[selectedButton].code;const placeholder=sel.length>0?sel:components[selectedButton].text,randomId=generateRandomID(),newNode=document.createElement("span");newNode.dataset.id=randomId,newNode.innerHTML=placeholder,componentCode=componentCode.replace("{{PLACEHOLDER}}",newNode.outerHTML);const variants=(0,_variantslib.getVariantsClass)(components[selectedButton].name);variants.length>0?(componentCode=componentCode.replace("{{VARIANTS}}",variants.join(" ")),componentCode=componentCode.replace("{{VARIANTSHTML}}",(0,_variantslib.getVariantsHtml)(_components.components[selectedButton].name))):(componentCode=componentCode.replace("{{VARIANTS}}",""),componentCode=componentCode.replace("{{VARIANTSHTML}}","")),componentCode=currentFlavor?componentCode.replace("{{FLAVOR}}","c4l_"+currentFlavor):componentCode.replace("{{FLAVOR}}",""),componentCode=applyRandomID(componentCode),componentCode=applyLangStrings(componentCode),editor.selection.setContent(componentCode);const nodeSel=editor.dom.select('span[data-id="'+randomId+'"]');null!=nodeSel&&nodeSel[0]&&editor.selection.select(nodeSel[0]),modal.destroy(),editor.focus()}},handleButtonMouseEvent=(event,modal,show)=>{const selectedButton=event.target.closest("button").dataset.id,node=modal.getRoot()[0].querySelector('div[data-id="code-preview-'+selectedButton+'"]'),previewDefault=modal.getRoot()[0].querySelector('div[data-id="code-preview-default"]');node&&(show?(previewDefault.classList.toggle("c4l-hidden"),node.classList.toggle("c4l-hidden")):(node.classList.toggle("c4l-hidden"),previewDefault.classList.toggle("c4l-hidden")))},handleVariantMouseEvent=(event,modal,show)=>{const variant=event.target.closest("span"),variantEnabled="on"==variant.dataset.state,button=event.target.closest("button");variantEnabled||updateVariantComponentState(variant,button,modal,show,!1)},handleVariantClick=(event,modal)=>{event.stopPropagation();const variant=event.target.closest("span"),button=event.target.closest("button");updateVariantComponentState(variant,button,modal,!1,!0)},getTemplateContext=async(editor,data)=>(console.log("template context"),console.log(flavors),Object.assign({},{elementid:editor.id,buttons:await getButtons(editor),filters:await getFilters(),flavors:flavors,preview:previewC4L},data)),getFilters=async()=>{const filters=[];return categories.forEach((category=>{filters.push({name:category.displayname,type:category.id,filterClass:1===category.order?"c4l-button-filter-enabled":""})})),filters},getFlavors=async()=>{const flavorRecords=await(0,_ajax.call)([{methodname:"tiny_c4l_get_flavors",args:{}}])[0],flavorsToStore=[];return flavorRecords.forEach((flavor=>{flavorsToStore.push({flavor:flavor.name,name:flavor.displayname})})),flavorsToStore},getButtons=async editor=>{const buttons=[];editor.selection.getContent();const components=await getComponents();return console.log(components),Object.values(components).forEach((component=>{buttons.push({id:component.id,name:component.displayname,type:component.compcat,imageClass:component.imageclass,htmlcode:component.code,variants:component.variants})})),console.log(buttons),buttons},getComponents=async()=>{const components=await(0,_ajax.call)([{methodname:"tiny_c4l_get_components",args:{}}])[0],indexedComponents={};return components.forEach((component=>{indexedComponents[component.id]=component})),indexedComponents},getCategories=async()=>await(0,_ajax.call)([{methodname:"tiny_c4l_get_compcats",args:{}}])[0],updateVariantComponentState=(variant,button,modal,show,updateHtml)=>{const selectedVariant="c4l-"+variant.dataset.variant+"-variant",selectedButton=button.dataset.id,componentClass=button.dataset.classcomponent,previewComponent=modal.getRoot()[0].querySelector('div[data-id="code-preview-'+selectedButton+'"] .'+componentClass),variantPreview=modal.getRoot()[0].querySelector('span[data-id="variantHTML-'+selectedButton+'"]');let variantsHtml="";previewComponent?updateHtml?("on"==variant.dataset.state?((0,_variantslib.removeVariant)(_components.components[selectedButton].name,variant.dataset.variant),updateVariantButtonState(variant,!1),previewComponent.classList.remove(selectedVariant)):((0,_variantslib.addVariant)(_components.components[selectedButton].name,variant.dataset.variant),updateVariantButtonState(variant,!0),previewComponent.classList.add(selectedVariant)),variantPreview&&(variantPreview.innerHTML=(0,_variantslib.getVariantsHtml)(_components.components[selectedButton].name))):(variantsHtml=(0,_variantslib.getVariantsHtml)(_components.components[selectedButton].name),show?(previewComponent.classList.add(selectedVariant),variantsHtml+=(0,_variantslib.getVariantHtml)(variant.dataset.variant)):previewComponent.classList.remove(selectedVariant),variantPreview&&(variantPreview.innerHTML=variantsHtml)):"on"==variant.dataset.state?((0,_variantslib.removeVariant)(_components.components[selectedButton].name,variant.dataset.variant),updateVariantButtonState(variant,!1)):((0,_variantslib.addVariant)(_components.components[selectedButton].name,variant.dataset.variant),updateVariantButtonState(variant,!0))},updateVariantButtonState=(variant,activate)=>{activate?(variant.dataset.state="on",variant.classList.remove(variant.dataset.variant+"-variant-off"),variant.classList.add(variant.dataset.variant+"-variant-on"),variant.classList.add("on")):(variant.dataset.state="off",variant.classList.remove(variant.dataset.variant+"-variant-on"),variant.classList.add(variant.dataset.variant+"-variant-off"),variant.classList.remove("on"))},showCategoryButtons=(modal,context)=>{const showNodes=modal.getRoot()[0].querySelectorAll('button[data-type="'+context+'"]'),hideNodes=modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type="'+context+'"])');showNodes.forEach((node=>node.classList.remove("c4l-hidden"))),hideNodes.forEach((node=>node.classList.add("c4l-hidden")))},applyLangStrings=text=>([...text.matchAll(/{{#([^}]*)}}/g)].forEach((strLang=>{text=text.replace("{{#"+strLang[1]+"}}",langStrings.get(strLang[1]))})),text),generateRandomID=()=>{const timestamp=(new Date).getTime();return"R"+Math.round(1e5*Math.random())+"-"+timestamp},applyRandomID=text=>{const compRegex=/{{@ID}}/g;return text.match(compRegex)&&(text=text.replace(compRegex,generateRandomID())),text},getAllStrings=async()=>{const keys=[],compRegex=/{{#([^}]*)}}/g;_components.components.forEach((element=>{keys.push(element.name),element.variants.forEach((variant=>{-1===keys.indexOf(variant)&&keys.push(variant)})),[...element.code.matchAll(compRegex)].forEach((strLang=>{-1===keys.indexOf(strLang[1])&&keys.push(strLang[1])}))}));const stringValues=await(0,_str.get_strings)(keys.map((key=>({key:key,component:_common.component}))));return new Map(keys.map(((key,index)=>[key,stringValues[index]])))}}));

//# sourceMappingURL=ui.min.js.map